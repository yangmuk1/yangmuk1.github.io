<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://yangmuk1.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://yangmuk1.github.io/" rel="alternate" type="text/html" hreflang="ko"/><updated>2025-05-06T08:36:54+00:00</updated><id>https://yangmuk1.github.io/feed.xml</id><title type="html">황준석의 사이트</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">베이스의 기초</title><link href="https://yangmuk1.github.io/blog/2025/bass-101/" rel="alternate" type="text/html" title="베이스의 기초"/><published>2025-05-06T08:10:00+00:00</published><updated>2025-05-06T08:10:00+00:00</updated><id>https://yangmuk1.github.io/blog/2025/bass-101</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2025/bass-101/"><![CDATA[<h3 id="개요">개요</h3> <p>Bass (bass guitar).</p> <p>베이스 ‘기타’라고는 하지만, 기타가 아니라 콘트라베이스로부터 파생된 악기이다. 그러므로 기타족 악기 분류에 속할 뿐, 원본이 기타 그 자체는 아니다. 하지만 기타와 같은 포지션으로 잡고 연주하기 때문에, 핑거피킹 주법은 콘트라의 피치카토가 아닌 기타의 아포얀도와 알 아이레 이고, 피크도 사용하는 엄연한 기타족 악기. 따라서 기타베이스와 같은 이름보다는 기타에 베이스라는 접두사를 붙인 베이스 기타라고 불린다.</p> <p>베이스를 연주하는 사람을 베이시스트라고 부른다. 국내에서는 베이시스트라고 부르는 경우가 절대적으로 많지만 외국에서는 종종 베이스 플레이어 라고도 부르며 콘트라베이스 주자와 구별하기 위해 베이스 기타리스트라는 명칭도 가끔씩 사용된다.</p> <h3 id="역사">역사</h3> <p>재즈 및 블루스 등 대중음악에서 널리 쓰이던 콘트라베이스를 소형화하고 저렴하게 사용하기 위해 개발된 악기다. 이전에도 콘트라베이스에 일렉트릭 픽업을 장착하는 등 비슷한 시도는 여럿 존재했으나, 최초로 상용화된 솔리드 바디 베이스 기타는 1950년대 펜더의 텔레캐스터 프레시전 베이스로 본다.</p> <p>초기 베이스 기타의 고유 플레이 스타일을 정립하고 처음으로 그 활용성을 보여준 뮤지션은 모타운의 세션 베이시스트인 제임스 제머슨(James Jamerson, 1936~1983)으로, 현대 거의 모든 베이시스트는 그의 플레이에 영향을 받았다고 해도 과언이 아니다.</p> <h3 id="외형">외형</h3> <p>태생부터 콘트라베이스에서 파생된 친척뻘 악기이므로 4현 베이스가 가장 보편적인 형태로 자리잡았으나, 엄밀하게 주법이나 악기의 형태로 따지자면 기타와 좀 더 가까운 악기이긴 하다.</p> <p>대부분은 4현 베이스를 연주하는 게 보통이나 연주자나 밴드에 따라서는 5현 베이스나 6현 베이스를 사용하기도 한다. 이외에도 7현 베이스나 8현 베이스도 있고, 반대로 현이 더 적은 3현 베이스도 있다. 4현, 5현, 6현, 7현 베이스는 일반적인 기성품으로 구할 수 있지만, 3현 이하의 베이스나 8현 이상의 베이스는 수요가 거의 없기 때문에 개조하거나 주문제작해야 한다.</p> <p>그 밖에 만돌린이나 12현 기타처럼 나란히 붙어 있어 동시에 짚을 수 있는 복현을 장비한 8현 베이스나 삼중복현 12현 베이스, 24현 베이스, 36현 베이스도 있다.</p> <p>베이스 기타라고 하면 보통 일렉트릭 기타와도 같은 솔리드 바디에 브릿지 쪽이 비대칭인 재즈베이스를 생각하지만, 수많은 셰이프가 존재하며, 어쿠스틱 기타와도 같은 울림통에 베이스용 넥과 줄을 걸어놓은 어쿠스틱 베이스나, 일렉트릭 기타의 할로우바디 모델처럼 상대적으로 작은 울림통에 F홀을 뚫은 모델도 있다.</p> <p>콘트라베이스에서 태어난 악기이기 때문에 기타에 비해 줄이 매우 굵고 장력이 세서 버징을 내지 않고 깔끔하게 연주하는 것이 중요하다. 실제로 교본을 보면 ‘뮤트’를 베이스의 알파이자 오메가로 비유할 정도로 중요하게 다룬다. 왜냐하면 베이스는 뮤트를 하지 않으면 다른 줄마저 울리며 소리를 내기 때문에 불협화음이 생겨버린다. 이뿐만이 아니라 뮤트를 전혀 하지 않으면 뜬금없는 소리가 연주속에서 나타났다 없어졌다를 반복하기 때문이다. 기타도 동일한 현상이 있긴 하지만 노트를 짧게 유지하는 편이고 다른 악기들 틈이나 디스토션 사운드의 자글자글함 속에 잘 숨길 수도 있다.</p> <p>특히 태핑(Tapping)이나 슬랩 시 이런 문제가 유난히 크게 다가와 손수건이나 헤어밴드 등을 사용하기도 한다. 실황 콘서트 앨범이 아닌 정규 앨범 레코딩에선 버징이 끼어들지 않은 깨끗한 녹음을 위해 거의 반드시 너트 부분에 부드러운 소재의 부착물을 대기도 한다. 이에 스트링 뮤터, 혹은 스트링 댐퍼라고 불리는 보조 기구도 나오고 있다.</p> <p>저역 현악기이므로 당연히 현의 굵기가 매우 굵다. 거의 피아노의 저음부의 줄과 같이 굵직굵직해서 기타보다 왼손의 근력을 더 많이 필요로 하므로 기타를 잘만 치던 사람들도 베이스를 처음 쥐면 운지하기 힘들어하는 모습을 볼 수 있다. 반대로 베이시스트가 일렉이나 어쿠스틱을 잡으면 줄을 잡기만 했는데 눌리는 편리함을 느낄 수 있다. 다만 손끝의 단위 면적당 가해지는 압력은 줄이 굵은(=손가락과 접촉하는 면적이 넓은) 베이스의 경우가 줄이 가는 기타보다 작기 때문에 줄을 눌러줄 때의 통증은 기타에 비해 덜한 편이다. 근데 줄이 굵을수록 장력은 세져서 생각만큼 약하지는 않다.</p> <p>베이스의 현을 갈아줄 때는 그 무지막지한 두께에 걸맞은 위험이 따르므로 꽤 주의해야 한다. 다른 기타들처럼 뎅겅 잘랐다간 영 좋지 않으니, 반드시 현을 풀어준 후 조치하는 것이 좋다. 그냥 잘라버리는 것도 가능은 하지만, 기타 현에 비해 자르는 것 부터가 고역으로 굉장히 힘이 많이 드는데다, 잘라지긴커녕 도구의 날이 나가버리는 사고가 나기 십상이다.</p> <p>한술 더 떠, 두께에 걸맞은 엄청난 장력이 걸려있는 현이기 때문에 안 풀고 뎅겅 잘라버렸다간, 잘린다기보단 줄이 터져버리는 꼴이 되어, 그대로 그 장력이 운동 에너지가 되어 연주자와 악기를 후려치는 영 좋지 않은 사고가 발생할 우려가 있다. 악기에 큰 흉이 남거나, 연주자에게 큰 부상을 입힐 우려가 있으니, 자르더라도 좀 풀어줘서 장력을 줄여준 다음에 잘라야 하며, 도구도 강선용 니퍼, 펜치나 꽤나 덩치큰 와이어 커터로 잘라줘야 제대로 자를 수 있다.</p> <p>간혹 30~32인치대의 Short, Medium Scale 베이스가 존재하지만, 동일한 굵기의 현을 썼을 때를 비교하면 Long Scale에 비해 줄의 장력이 약해 다운 튜닝이 어려워지고 서스테인이 감소하기도 한다. 이런 상황이다보니 케이스도 훨씬 길어서 긱백에 넣고 둘러매면 머리 위로 매우 툭 튀어나와 여기저기 걸리기 십상이다. 특히 대중교통으로 움직일 때 헤드가 부딪히지 않게 하려고 온갖 해괴한 자세를 하고 있는 자신을 볼 수 있을 것이다. 당연히 하드케이스도 매우 크기 때문에 여러모로 애로사항이 꽃핀다. 하드 케이스 사이즈가 어느 정도냐 하면 소형차 트렁크에 넣으면 가로로 꽉 차는 정도라고 보면 된다. 마티즈~아반떼 정도의 차 뒷좌석에 놔두면 뒷좌석이 꽉차는 마법을 볼 수 있다.</p> <p>무게는 일렉 기타보다 1kg 정도 더 나간다. 인간의 빈약한 척추 주변 근골격계는 1kg 무기 차이로도 엄청난 고통의 차이를 느끼기에 그 무게감은 무겁다고 밖에는 표현을 못한다. 게다가 길이도 더 길쭉하고, 걸려있는 현의 특성까지 더해져서 무게 중심마저 기타 대비 한쪽으로 더 쏠려 있어 실질 부담은 더욱 커진다.</p> <p>4현 기준으로 베이스의 기본적인 무게는 3kg 후반에서 4kg 초반으로 4kg 미만은 대체로 가벼운 베이스, 4kg 중반 이상은 무거운 베이스로 여긴다. 현이 늘어나면 무게도 조금씩 늘어나는데 대개 1현이 늘어날 때마다 300g~500g 정도 무거워진다. 몇몇 베이시스트들은 무게 감량을 위해 픽업과 브릿지 부분만 남겨두고 모조리 절단 하기도 하고 바디를 파내는 방식으로 무게를 줄이고 균형을 맞추기도 한다. 일부 제조사들은 악기에 목재보다 가벼운 재료를 사용하여 무게를 줄이기도 한다. 가볍지 않은 무게 때문에 연주자에게 바디 자체의 무게와 바디의 밸런스는 악기 선택에 중요한 요소가 된다.[10] 드러머 못지 않게 체력과 근력이 요구된다.</p> <h3 id="유명-베이시스트">유명 베이시스트</h3> <ul> <li>한국 <ul> <li><a href="https://namu.wiki/w/%EA%B5%AC%EB%B3%B8%EC%95%94">구본암</a></li> <li><a href="https://namu.wiki/w/%EA%B9%80%EC%B0%BD%ED%9B%88(%EC%9D%8C%EC%95%85%EC%9D%B8)">김창훈 - 산울림</a></li> <li><a href="https://namu.wiki/w/H.J.Freaks">김현모(H.J.Freaks)</a></li> <li><a href="https://namu.wiki/w/%EC%9C%A4%EC%83%81">윤상</a></li> <li><a href="https://namu.wiki/w/%EC%A1%B0%EC%9B%90%EC%83%81">조원상 - LUCY</a></li> </ul> </li> <li>해외 <ul> <li><a href="https://namu.wiki/w/%EC%A0%9C%EC%9E%84%EC%8A%A4%20%EC%A0%9C%EB%A8%B8%EC%8A%A8">제임스 제머슨</a></li> <li><a href="https://namu.wiki/w/%ED%94%8C%EB%A6%AC(RHCP)">플리 - 레드 핫 칠리 페퍼스</a></li> <li><a href="https://namu.wiki/w/%EC%A1%B4%20%EC%97%94%ED%8A%B8%EC%9C%84%EC%8A%AC">존 엔트위슬 - 더 후</a></li> <li><a href="https://namu.wiki/w/%ED%8F%B4%20%EB%A7%A4%EC%B9%B4%ED%8A%B8%EB%8B%88">폴 매카트니 - 비틀즈</a></li> <li><a href="https://namu.wiki/w/%EB%B9%85%ED%84%B0%20%EC%9A%B0%ED%8A%BC">빅터 우튼</a></li> </ul> </li> </ul> <h3 id="요약">요약</h3> <ol> <li>콘트라베이스로부터 파생된 악기</li> <li><strong>펜더 텔레케스터 프레시전 베이스</strong> : 최초의 상용화 베이스</li> <li><strong>제임스 제머슨</strong>: 베이스의 아버지</li> <li>4현 베이스, 5현 베이스 등 다양한 현 수의 베이스 존재 (4현 베이스가 보편적)</li> <li>다양한 베이시스트들이 있음</li> </ol> <hr/> <p>출처: https://namu.wiki/w/%EB%B2%A0%EC%9D%B4%EC%8A%A4</p>]]></content><author><name></name></author><category term="Jekyll"/><category term="웹개발"/><category term="음악"/><category term="베이스"/><summary type="html"><![CDATA[개요]]></summary></entry><entry><title type="html">Markdown 문법 기초</title><link href="https://yangmuk1.github.io/blog/2025/markdown/" rel="alternate" type="text/html" title="Markdown 문법 기초"/><published>2025-05-06T07:52:00+00:00</published><updated>2025-05-06T07:52:00+00:00</updated><id>https://yangmuk1.github.io/blog/2025/markdown</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2025/markdown/"><![CDATA[<p>Text can be <strong>bold</strong> or <em>italic)</em></p> <p><a href="https://www.snu.ac.kr/">Link to another page.</a></p> <p>There should be whitespace between paragraphs.</p> <p>There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.</p> <h1 id="header-1">Header 1</h1> <p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p> <h2 id="header-2">Header 2</h2> <blockquote> <p>This is a blockquote following a header.</p> <p>When something is important enough, you do it even if the odds are not in your favor.</p> </blockquote> <h3 id="header-3">Header 3</h3> <ul> <li>This is an unordered list following a header.</li> <li>This is an unordered list following a header.</li> <li>This is an unordered list following a header.</li> </ul> <h4 id="header-4">Header 4</h4> <ol> <li>This is an ordered list following a header.</li> <li>This is an ordered list following a header.</li> <li>This is an ordered list following a header.</li> </ol> <h5 id="header-5">Header 5</h5> <table> <thead> <tr> <th>head1</th> <th>head</th> <th>two</th> <th>three</th> </tr> </thead> <tbody> <tr> <td>ok</td> <td>good</td> <td>swedish fish</td> <td>nice</td> </tr> <tr> <td>out of stock</td> <td>good</td> <td>plenty</td> <td>nice</td> </tr> <tr> <td>ok</td> <td>good</td> <td><code class="language-plaintext highlighter-rouge">oreos</code></td> <td>hmm</td> </tr> <tr> <td>ok</td> <td>good</td> <td><code class="language-plaintext highlighter-rouge">zoute</code> drop</td> <td>yumm</td> </tr> </tbody> </table> <h3 id="here-is-an-unordered-list">Here is an unordered list:</h3> <ul> <li>Item foo</li> <li>Item bar</li> <li>Item baz</li> <li>Item zip</li> </ul> <h3 id="and-an-ordered-list">And an ordered list:</h3> <ol> <li>Item one</li> <li>Item two</li> <li>Item three</li> <li>Item four</li> </ol> <h3 id="and-a-nested-list">And a nested list:</h3> <ul> <li>level 1 item <ul> <li>level 2 item</li> <li>level 2 item <ul> <li>level 3 item</li> <li>level 3 item</li> </ul> </li> </ul> </li> <li>level 1 item <ul> <li>level 2 item</li> <li>level 2 item</li> <li>level 2 item</li> </ul> </li> <li>level 1 item <ul> <li>level 2 item</li> <li>level 2 item</li> </ul> </li> <li>level 1 item</li> </ul> <h3 id="theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</h3> <hr/> <h3 id="image">Image</h3> <p><img src="https://muflex.co.kr/web/product/big/202406/99c7f69789e8eb5205ada7fa6ba044e7.jpg" alt="Ibanez sr300e"/></p>]]></content><author><name></name></author><category term="Jekyll"/><category term="웹개발"/><summary type="html"><![CDATA[Text can be bold or italic)]]></summary></entry><entry><title type="html">나의 첫 Jekyll 블로그 포스트</title><link href="https://yangmuk1.github.io/blog/2025/my-first-jekyll-blog-post/" rel="alternate" type="text/html" title="나의 첫 Jekyll 블로그 포스트"/><published>2025-04-30T07:14:00+00:00</published><updated>2025-04-30T07:14:00+00:00</updated><id>https://yangmuk1.github.io/blog/2025/my-first-jekyll-blog-post</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2025/my-first-jekyll-blog-post/"><![CDATA[<p>이것은 나의 첫 Jekyll 블로그 포스트입니다.</p>]]></content><author><name></name></author><category term="Jekyll"/><category term="웹개발"/><category term="github-pages"/><category term="블로그"/><summary type="html"><![CDATA[이것은 나의 첫 Jekyll 블로그 포스트입니다.]]></summary></entry><entry><title type="html">a post with plotly.js</title><link href="https://yangmuk1.github.io/blog/2025/plotly/" rel="alternate" type="text/html" title="a post with plotly.js"/><published>2025-03-26T14:24:00+00:00</published><updated>2025-03-26T14:24:00+00:00</updated><id>https://yangmuk1.github.io/blog/2025/plotly</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2025/plotly/"><![CDATA[<p>This is an example post with some <a href="https://plotly.com/javascript/">plotly</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">plotly
</span><span class="sb">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "type": "scatter"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [16, 5, 11, 9],
      "type": "scatter"
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "type": "scatter"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [16, 5, 11, 9],
      "type": "scatter"
    }
  ]
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">plotly
</span><span class="sb">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included plotly.js code could look like]]></summary></entry><entry><title type="html">a post with image galleries</title><link href="https://yangmuk1.github.io/blog/2024/photo-gallery/" rel="alternate" type="text/html" title="a post with image galleries"/><published>2024-12-04T01:59:00+00:00</published><updated>2024-12-04T01:59:00+00:00</updated><id>https://yangmuk1.github.io/blog/2024/photo-gallery</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2024/photo-gallery/"><![CDATA[<p>The images in this post are all zoomable, arranged into different mini-galleries using different libraries.</p> <h2 id="lightbox2"><a href="https://lokeshdhakar.com/projects/lightbox2/">Lightbox2</a></h2> <p><a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p> <hr/> <h2 id="photoswipe"><a href="https://photoswipe.com/">PhotoSwipe</a></h2> <div class="pswp-gallery pswp-gallery--single-column" id="gallery--getting-started"> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-pswp-width="1669" data-pswp-height="2500" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg" alt=""/> </a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-2500.jpg" data-pswp-width="1875" data-pswp-height="2500" data-cropped="true" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-200.jpg" alt=""/> </a> <a href="https://unsplash.com" data-pswp-src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1666" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg" alt=""/> </a> <div> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1667" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg" alt=""/> </a> </div> </div> <hr/> <h2 id="spotlight-js"><a href="https://nextapps-de.github.io/spotlight/">Spotlight JS</a></h2> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/> </a> </div> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg"/> </a> </div> <hr/> <h2 id="venobox"><a href="https://veno.es/venobox/">Venobox</a></h2> <p><a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what included image galleries could look like]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://yangmuk1.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://yangmuk1.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024[[read-time]] min read We’re introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we’re introducing Gemini 1.5 Flash: a model that’s lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We’re also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5’s 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It’s optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it’s a lighter weight model than 1.5 Pro, it’s highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it’s been trained by 1.5 Pro through a process called “distillation,” where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash’s availability and pricing.Over the last few months, we’ve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we’ve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We’ve improved control over the model’s responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we’ve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we’re now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do — not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we’re also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We’re announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we’ve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind’s mission to build AI responsibly to benefit humanity, we’ve always wanted to develop universal AI agents that can be helpful in everyday life. That’s why today, we’re sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do — and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we’ve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we’ve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we’ve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they’re being used in, and respond quickly, in conversation.With technology like this, it’s easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We’ve made incredible progress so far with our family of Gemini models, and we’re always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we’re able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google’s privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let’s stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://yangmuk1.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://yangmuk1.github.io/blog/2024/tabs</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="89e55401-3455-4c6a-bd7e-fa56f7f3daa1" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="89e55401-3455-4c6a-bd7e-fa56f7f3daa1" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="8ca4e4ae-cd14-4fb8-8e07-9d844eaed639" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="8ca4e4ae-cd14-4fb8-8e07-9d844eaed639" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="f05da451-f531-40c8-aaf1-ec284e4d7968" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="f05da451-f531-40c8-aaf1-ec284e4d7968" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://yangmuk1.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://yangmuk1.github.io/blog/2024/typograms</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://yangmuk1.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://yangmuk1.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://yangmuk1.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://yangmuk1.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://yangmuk1.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry></feed>